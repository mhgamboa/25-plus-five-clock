{"version":3,"sources":["index.js"],"names":["AdjustTimeContainer","className","id","this","props","sessionLength","onClick","decreaseSessionLength","increaseSessionLength","React","Component","AdjustBreakContainer","Timer","currentTimerType","currentMinute","currentSecond","isPlaying","pauseFunction","playFunction","resetFunction","App","clearInterval","runTimer","setState","state","setInterval","audioBeep","play","initialBreakLength","initialSessionLength","pause","currentTime","e","sessionType","target","dataset","session","src","ref","audio","ReactDOM","render","document","querySelector"],"mappings":"yOAKMA,E,4JACJ,WACE,OACE,sBAAKC,UAAU,4BAAf,UACE,oBAAIC,GAAG,gBAAP,4BACA,oBAAIA,GAAG,iBAAP,SAAyBC,KAAKC,MAAMC,gBACpC,gCACE,wBACEH,GAAG,oBACHI,QAASH,KAAKC,MAAMG,sBACpB,eAAa,UAHf,eAOA,wBACEL,GAAG,oBACHI,QAASH,KAAKC,MAAMI,sBACpB,eAAa,UAHf,yB,GAdwBC,IAAMC,WA2BlCC,E,4JACJ,WACE,OACE,sBAAKV,UAAU,4BAAf,UACE,oBAAIC,GAAG,cAAP,0BACA,oBAAIA,GAAG,eAAP,SAAuBC,KAAKC,MAAMC,gBAClC,gCACE,wBACEH,GAAG,kBACHI,QAASH,KAAKC,MAAMG,sBACpB,eAAa,QAHf,eAOA,wBACEL,GAAG,kBACHI,QAASH,KAAKC,MAAMI,sBACpB,eAAa,QAHf,yB,GAdyBC,IAAMC,WA2BnCE,E,4JACJ,WACE,OACE,sBAAKX,UAAU,iBAAf,UACE,qBAAIC,GAAG,cAAP,UAAsBC,KAAKC,MAAMS,iBAAjC,WACA,qBAAIX,GAAG,YAAP,UACE,sBAAMD,UAAU,gBAAhB,SACGE,KAAKC,MAAMU,cAAgB,GAA3B,WACOX,KAAKC,MAAMU,eACfX,KAAKC,MAAMU,gBAEjB,qCACA,sBAAMb,UAAU,iBAAhB,SACGE,KAAKC,MAAMW,cAAgB,GAA3B,WACOZ,KAAKC,MAAMW,eACfZ,KAAKC,MAAMW,mBAGnB,sBAAKd,UAAU,wBAAf,UACE,wBACEC,GAAG,aACHI,QACEH,KAAKC,MAAMY,UACPb,KAAKC,MAAMa,cACXd,KAAKC,MAAMc,aALnB,wBAUA,wBACEhB,GAAG,QACHD,UAAU,cACVK,QAASH,KAAKC,MAAMe,cAHtB,6B,GA7BUV,IAAMC,WA2CpBU,E,kDACJ,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAWRa,cAAgB,WACdI,cAAc,EAAKC,UAEnB,EAAKC,UAAS,SAACC,GAAD,MAAY,CACxBR,WAAYQ,EAAMR,eAhBH,EAoBnBE,aAAe,WACb,EAAKI,SAAWG,aAAY,WAEQ,IAA7B,EAAKD,MAAMT,cAAqD,IAA7B,EAAKS,MAAMV,eAEjD,EAAKY,UAAUC,OAEqB,YAAhC,EAAKH,MAAMX,iBACb,EAAKU,SAAS,CACZV,iBAAkB,QAClBC,cAAe,EAAKU,MAAMI,qBAI5B,EAAKL,SAAS,CACZV,iBAAkB,UAClBC,cAAe,EAAKU,MAAMK,wBAGQ,IAA7B,EAAKL,MAAMT,cACpB,EAAKQ,UAAS,SAACC,GAAD,MAAY,CACxBT,cAAe,GACfD,cAAeU,EAAMV,cAAgB,MAGvC,EAAKS,UAAS,SAACC,GAAD,MAAY,CAAET,cAAeS,EAAMT,cAAgB,QAElE,KAEH,EAAKQ,UAAS,SAACC,GAAD,MAAY,CACxBR,WAAYQ,EAAMR,eAlDH,EAuDnBG,cAAgB,WACdE,cAAc,EAAKC,UACnB,EAAKI,UAAUI,QACf,EAAKJ,UAAUK,YAAc,EAC7B,EAAKR,SAAS,CACZM,qBAAsB,GACtBD,mBAAoB,EACpBf,iBAAkB,UAClBG,WAAW,EACXF,cAAe,GACfC,cAAe,KAjEA,EAqEnBP,sBAAwB,SAACwB,GACvB,IAAIC,EAAcD,EAAEE,OAAOC,QAAQC,QAC9B,EAAKZ,MAAMR,YACM,YAAhBiB,EACE,EAAKT,MAAMK,sBAAwB,IACrC,EAAKN,UAAS,SAACC,GAAD,MAAY,CACxBK,qBAAsBL,EAAMK,qBAAuB,EACnDf,cAAeU,EAAMK,qBAAuB,EAC5Cd,cAAe,MAGM,UAAhBkB,GACL,EAAKT,MAAMI,oBAAsB,IACnC,EAAKL,UAAS,SAACC,GAAD,MAAY,CACxBI,mBAAoBJ,EAAMI,mBAAqB,QAnFtC,EA0FnBrB,sBAAwB,SAACyB,GACvB,IAAIC,EAAcD,EAAEE,OAAOC,QAAQC,QAC9B,EAAKZ,MAAMR,YACM,YAAhBiB,EACE,EAAKT,MAAMK,qBAAuB,GACpC,EAAKN,UAAS,SAACC,GAAD,MAAY,CACxBK,qBAAsBL,EAAMK,qBAAuB,EACnDf,cAAeU,EAAMK,qBAAuB,EAC5Cd,cAAe,MAGM,UAAhBkB,GACL,EAAKT,MAAMI,mBAAqB,GAClC,EAAKL,UAAS,SAACC,GAAD,MAAY,CACxBI,mBAAoBJ,EAAMI,mBAAqB,QAtGvD,EAAKJ,MAAQ,CACXK,qBAAsB,GACtBD,mBAAoB,EACpBf,iBAAkB,UAClBG,WAAW,EACXF,cAAe,GACfC,cAAe,GARA,E,0CA8GnB,WAAU,IAAD,OACP,OACE,sBAAKd,UAAU,OAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,cAACD,EAAD,CACEK,cAAeF,KAAKqB,MAAMK,qBAC1BrB,sBAAuBL,KAAKK,sBAC5BD,sBAAuBJ,KAAKI,wBAE9B,cAACI,EAAD,CACEN,cAAeF,KAAKqB,MAAMI,mBAC1BpB,sBAAuBL,KAAKK,sBAC5BD,sBAAuBJ,KAAKI,2BAGhC,cAACK,EAAD,CACEE,cAAeX,KAAKqB,MAAMV,cAC1BC,cAAeZ,KAAKqB,MAAMT,cAC1BF,iBAAkBV,KAAKqB,MAAMX,iBAC7BM,cAAehB,KAAKgB,cACpBD,aAAcf,KAAKe,aACnBD,cAAed,KAAKc,cACpBD,UAAWb,KAAKqB,MAAMR,YAExB,uBACEd,GAAG,OACHmC,IAAI,gEACJC,IAAK,SAACC,GACJ,EAAKb,UAAYa,Y,GA3IX9B,IAAMC,WAoJxB8B,IAASC,OAAO,cAACrB,EAAD,IAASsB,SAASC,cAAc,Y","file":"static/js/main.f80d44e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\n/* Component to adjust the times */\r\nclass AdjustTimeContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"sessionAndBreakContainers\">\r\n        <h3 id=\"session-label\">Session Length</h3>\r\n        <h2 id=\"session-length\">{this.props.sessionLength}</h2>\r\n        <div>\r\n          <button\r\n            id=\"session-decrement\"\r\n            onClick={this.props.decreaseSessionLength}\r\n            data-session=\"session\"\r\n          >\r\n            -\r\n          </button>\r\n          <button\r\n            id=\"session-increment\"\r\n            onClick={this.props.increaseSessionLength}\r\n            data-session=\"session\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AdjustBreakContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"sessionAndBreakContainers\">\r\n        <h3 id=\"break-label\">Break Length</h3>\r\n        <h2 id=\"break-length\">{this.props.sessionLength}</h2>\r\n        <div>\r\n          <button\r\n            id=\"break-decrement\"\r\n            onClick={this.props.decreaseSessionLength}\r\n            data-session=\"break\"\r\n          >\r\n            -\r\n          </button>\r\n          <button\r\n            id=\"break-increment\"\r\n            onClick={this.props.increaseSessionLength}\r\n            data-session=\"break\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Timer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"timerContainer\">\r\n        <h1 id=\"timer-label\">{this.props.currentTimerType} Time</h1>\r\n        <h2 id=\"time-left\">\r\n          <span className=\"currentMinute\">\r\n            {this.props.currentMinute < 10\r\n              ? `0${this.props.currentMinute}`\r\n              : this.props.currentMinute}\r\n          </span>\r\n          <span>:</span>\r\n          <span className=\"currentSeccond\">\r\n            {this.props.currentSecond < 10\r\n              ? `0${this.props.currentSecond}`\r\n              : this.props.currentSecond}\r\n          </span>\r\n        </h2>\r\n        <div className=\"timerButtonsContainer\">\r\n          <button\r\n            id=\"start_stop\"\r\n            onClick={\r\n              this.props.isPlaying\r\n                ? this.props.pauseFunction\r\n                : this.props.playFunction\r\n            }\r\n          >\r\n            Play/Pause\r\n          </button>\r\n          <button\r\n            id=\"reset\"\r\n            className=\"resetButton\"\r\n            onClick={this.props.resetFunction}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* Base App */\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      initialSessionLength: 25,\r\n      initialBreakLength: 5,\r\n      currentTimerType: \"Session\",\r\n      isPlaying: false,\r\n      currentMinute: 25,\r\n      currentSecond: 0,\r\n    };\r\n  }\r\n\r\n  pauseFunction = () => {\r\n    clearInterval(this.runTimer);\r\n\r\n    this.setState((state) => ({\r\n      isPlaying: !state.isPlaying,\r\n    }));\r\n  };\r\n\r\n  playFunction = () => {\r\n    this.runTimer = setInterval(() => {\r\n      // When Timer Ends\r\n      if ((this.state.currentSecond === 0) & (this.state.currentMinute === 0)) {\r\n        // Play the Audio\r\n        this.audioBeep.play();\r\n        // If we are in a Session switch to Break when the timer ends\r\n        if (this.state.currentTimerType === \"Session\") {\r\n          this.setState({\r\n            currentTimerType: \"Break\",\r\n            currentMinute: this.state.initialBreakLength,\r\n          });\r\n          // If we are in a Break switch to Session when the timer ends\r\n        } else {\r\n          this.setState({\r\n            currentTimerType: \"Session\",\r\n            currentMinute: this.state.initialSessionLength,\r\n          });\r\n        }\r\n      } else if (this.state.currentSecond === 0) {\r\n        this.setState((state) => ({\r\n          currentSecond: 59,\r\n          currentMinute: state.currentMinute - 1,\r\n        }));\r\n      } else {\r\n        this.setState((state) => ({ currentSecond: state.currentSecond - 1 }));\r\n      }\r\n    }, 1000);\r\n\r\n    this.setState((state) => ({\r\n      isPlaying: !state.isPlaying,\r\n    }));\r\n  };\r\n\r\n  //Initializes all state\r\n  resetFunction = () => {\r\n    clearInterval(this.runTimer);\r\n    this.audioBeep.pause();\r\n    this.audioBeep.currentTime = 0;\r\n    this.setState({\r\n      initialSessionLength: 25,\r\n      initialBreakLength: 5,\r\n      currentTimerType: \"Session\",\r\n      isPlaying: false,\r\n      currentMinute: 25,\r\n      currentSecond: 0,\r\n    });\r\n  };\r\n  // Function to increase Session/Breaktime\r\n  increaseSessionLength = (e) => {\r\n    let sessionType = e.target.dataset.session;\r\n    if (!this.state.isPlaying) {\r\n      if (sessionType === \"session\") {\r\n        if (this.state.initialSessionLength <= 59) {\r\n          this.setState((state) => ({\r\n            initialSessionLength: state.initialSessionLength + 1,\r\n            currentMinute: state.initialSessionLength + 1,\r\n            currentSecond: 0,\r\n          }));\r\n        }\r\n      } else if (sessionType === \"break\") {\r\n        if (this.state.initialBreakLength <= 59) {\r\n          this.setState((state) => ({\r\n            initialBreakLength: state.initialBreakLength + 1,\r\n          }));\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // Function to decrease Session/Breaktime\r\n  decreaseSessionLength = (e) => {\r\n    let sessionType = e.target.dataset.session;\r\n    if (!this.state.isPlaying) {\r\n      if (sessionType === \"session\") {\r\n        if (this.state.initialSessionLength > 1) {\r\n          this.setState((state) => ({\r\n            initialSessionLength: state.initialSessionLength - 1,\r\n            currentMinute: state.initialSessionLength - 1,\r\n            currentSecond: 0,\r\n          }));\r\n        }\r\n      } else if (sessionType === \"break\") {\r\n        if (this.state.initialBreakLength > 1) {\r\n          this.setState((state) => ({\r\n            initialBreakLength: state.initialBreakLength - 1,\r\n          }));\r\n        }\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"base\">\r\n        <div className=\"configureSections\">\r\n          <AdjustTimeContainer\r\n            sessionLength={this.state.initialSessionLength}\r\n            increaseSessionLength={this.increaseSessionLength}\r\n            decreaseSessionLength={this.decreaseSessionLength}\r\n          />\r\n          <AdjustBreakContainer\r\n            sessionLength={this.state.initialBreakLength}\r\n            increaseSessionLength={this.increaseSessionLength}\r\n            decreaseSessionLength={this.decreaseSessionLength}\r\n          />\r\n        </div>\r\n        <Timer\r\n          currentMinute={this.state.currentMinute}\r\n          currentSecond={this.state.currentSecond}\r\n          currentTimerType={this.state.currentTimerType}\r\n          resetFunction={this.resetFunction}\r\n          playFunction={this.playFunction}\r\n          pauseFunction={this.pauseFunction}\r\n          isPlaying={this.state.isPlaying}\r\n        />\r\n        <audio\r\n          id=\"beep\"\r\n          src=\"https://freesound.org/data/previews/202/202029_2605156-lq.mp3\"\r\n          ref={(audio) => {\r\n            this.audioBeep = audio;\r\n          }}\r\n        ></audio>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* Render */\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}